# This file contains the issues that need to be addressed

-Network filtering, have not been able to correctly filter the OSM file which after preprocessing 
gives a network that is the same as the orignal JLD network. While filtered network is similar, it is slighly 
more dense.

-Try running network for entire region after removing try/catch block in preprocessing (line 112). The try/catch block 
was used when the OSM file was cut to prevent errors that arose when nodes in ways were missing from the OSM file.

-Try running request preprocessing without ratio check (line 100, 110, 135) after creating less dense network. The
check is needed when the distance between two nodes that were very close to each other is calculated.

-As sections of network are missing should we restrict the calls that are processed based on distance between
node source/target and actual source/target location.

-Popularity of each rank might have changed with new network, check and update if necessary. (Need number of calls
that start at each rank from preprocess_requests (source.txt file)).

-No taxis are going to rank 12 (they did before network was changed). Consider changing the popularity weighting 
when deciding on the nearby rank to visit. 

-The maximum capacity logic is VERY slow. Investigate

-Currently when dispatching a taxi for a trip if there is no available taxi then the trip will not be complete.
Should modify dispatcher such that if a taxi becomes available within a certain allowable 'waiting time' then
the trip will be complete instead of being missed.
- Adding a ML based discharge model for finiding the charge lost while waiting in queue

- Porting the above found time as a parameter for finding nearest charging point. 

- Taxi pool modelling.

- The trip structure doesnt consider the taxi ID.

- The path vector inside the route structure doesnt have the exact path but just the starting and ending location. 

- Sometimes the time vector of the non-urgent route 3 generated in the dispatch function have length 0.

- Need special case in "generate_taxi_move" for taxi movement to and from home node.

- The path vector inside the route structure doesnt have the exact path but just the starting and ending location. 

- Find discrepancies with charger utilistion and energy output.
